/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2020-2021 Lorenzo Delgado
 * Copyright (c) 2016-2019 Serhii Pirohov
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 */

plugins {
  id 'idea'
  id 'java'
  id 'com.adarshr.test-logger' version '2.1.1'
}

allprojects {
  repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
  }

  plugins.withType(GroovyPlugin).whenPluginAdded {
    sourceSets {
      intTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
      }
    }

    configurations {
      intTestImplementation.extendsFrom testImplementation
      intTestRuntimeOnly.extendsFrom testRuntimeOnly
    }

    task integrationTest(type: Test) {
      description = 'Runs integration tests.'
      group = 'verification'

      testClassesDirs = sourceSets.intTest.output.classesDirs
      classpath = sourceSets.intTest.runtimeClasspath
      shouldRunAfter test
    }

    check.dependsOn integrationTest

    // Provide project paths to tests
    tasks.withType(Test) {
      systemProperty 'root.path', rootProject.projectDir.absolutePath
      systemProperty 'project.builddir', project.buildDir.absolutePath
      systemProperty 'project.test.resultsdir', "${buildDir}/test-results"
    }
  }
}

testlogger {
  theme 'mocha'
  slowThreshold 6000
  showFullStackTraces true
}
